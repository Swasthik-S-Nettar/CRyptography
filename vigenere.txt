# This function generates the key
def generateKey(string, key):
        key = list(key)
        if len(string) == len(key):
                return(key)
        else:
                for i in range(len(string) -
                                        len(key)):
                        key.append(key[i % len(key)])

        key="".join(key)

        return(key)

# This function returns the encrypted text
def cipherText(string, key):
        cipher_text = []
        for i in range(len(string)):
                x = (ord(string[i]) +
                        ord(key[i])) % 26
                x += ord('A')
                cipher_text.append(chr(x))
        return("" . join(cipher_text))

# This function decrypts the encrypted text

def originalText(cipher_text, key):
        orig_text = []
        for i in range(len(cipher_text)):
                x = (ord(cipher_text[i]) -
                        ord(key[i]) + 26) % 26
                x += ord('A')
                orig_text.append(chr(x))
        return("" . join(orig_text))

# Driver code
s=int(input("Select 1 for Encrypt\n2 for Decrypt\n"))

if s==1:

    string = input("Enter the plain text: ")

    keyword = input("Enter the key: ")

    key = generateKey(string, keyword)
    print("Key generated is: ",key)
    cipher_text = cipherText(string,key)
    print("Ciphertext:", cipher_text)



elif s==2:
    string = input("Enter the cipher text: ")

    keyword = input("Enter the key: ")

    key = generateKey(string, keyword)
    print("Key generated is: ",key)
    plain_text = originalText(string,key)
    print("Plaintext :", plain_text)